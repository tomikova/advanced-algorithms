using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace NASP3
{
    public class WFI
    {
        public List<int> numbers;
        public int result = 0;

        public WFI()
        {
            numbers = new List<int>();
        }

        public void Calculate(int x, int y)
        {
            numbers.Clear();
            result = 0;

            int[,] matrix = {
                            {0,2,6,12,999,999,999,999,999,999,999,999,999,999,999,999,999,999} ,
                            {999,0,3,999,9,999,999,999,999,999,999,999,999,999,999,999,999,999},
                            {999,999,0,999,999,1,999,999,999,999,999,999,999,999,999,999,999,999},
                            {999,999,999,0,999,999,999,-2,999,999,999,999,999,999,999,999,999,999},
                            {999,999,999,999,0,999,1,999,999,999,999,999,999,999,999,999,999,999},
                            {999,999,999,999,2,0,999,4,999,999,999,999,999,999,999,999,999,999},
                            {999,999,999,999,999,999,0,999,2,999,999,999,999,999,999,999,999,999},
                            {999,999,999,999,999,999,999,0,3,999,1,-3,-2,999,999,999,999,999},
                            {999,999,999,999,999,999,999,999,0,-1,999,999,999,999,999,999,999,999},
                            {999,999,999,999,999,999,999,999,999,0,999,999,999,5,999,999,999,999},
                            {999,999,999,999,999,999,999,999,999,2,0,999,999,999,-9,999,999,999},
                            {999,999,999,999,999,999,999,999,999,999,999,0,999,999,999,7,999,999},
                            {999,999,999,999,999,999,999,999,999,999,999,2,0,999,999,999,2,999},
                            {999,999,999,999,999,999,999,999,999,999,999,999,999,0,2,999,999,-9},
                            {999,999,999,999,999,999,999,999,999,999,999,999,999,999,0,999,999,11},
                            {999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,0,999,-6},
                            {999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,0,3},
                            {999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,0}
                            };

            int[,] path = {
                              {0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                              {0,0,2,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0},
                              {0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0},
                              {0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0},
                              {0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0},
                              {0,0,0,0,6,0,0,6,0,0,0,0,0,0,0,0,0,0},
                              {0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0},
                              {0,0,0,0,0,0,0,0,8,0,8,8,8,0,0,0,0,0},
                              {0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0},
                              {0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0},
                              {0,0,0,0,0,0,0,0,0,11,0,0,0,0,11,0,0,0},
                              {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0},
                              {0,0,0,0,0,0,0,0,0,0,0,13,0,0,0,0,13,0},
                              {0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,14},
                              {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15},
                              {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16},
                              {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17},
                              {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}
                          };

            for (int k = 0; k < 18; k++)
            {
                for (int i = 0; i < 18; i++)
                {
                    for (int j = 0; j < 18; j++)
                    {
                        if (matrix[i, k] + matrix[k, j] < matrix[i, j])
                        {
                            if (matrix[i, k] != 999 && matrix[k, j] != 999)
                            {
                                matrix[i, j] = matrix[i, k] + matrix[k, j];
                                path[i, j] = path[k, j];
                            }
                        }
                    }
                }
            }
          
            int tmp = y;
            numbers.Add(tmp);
            while (tmp != x)
            {
                if (tmp == 0)
                {
                    numbers.Clear();
                    break;
                }
                tmp = path[x - 1, tmp - 1];
                numbers.Add(tmp);
            }

            numbers.Reverse();
            result = matrix[x-1, y-1];
        }
    }
}
